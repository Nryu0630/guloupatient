// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oGeya3WnsoRJC1KzKAMsFn
// Component: a2CyCAHg3qb-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { Video } from "@plasmicpkgs/plasmic-basic-components";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: oGeya3WnsoRJC1KzKAMsFn/projectcss
import sty from "./Plasmic_33Preventingfallsandfallingfromthebed.module.css"; // plasmic-import: a2CyCAHg3qb-/css

createPlasmicElementProxy;

export type Plasmic_33Preventingfallsandfallingfromthebed__VariantMembers = {};
export type Plasmic_33Preventingfallsandfallingfromthebed__VariantsArgs = {};
type VariantPropType =
  keyof Plasmic_33Preventingfallsandfallingfromthebed__VariantsArgs;
export const Plasmic_33Preventingfallsandfallingfromthebed__VariantProps =
  new Array<VariantPropType>();

export type Plasmic_33Preventingfallsandfallingfromthebed__ArgsType = {};
type ArgPropType =
  keyof Plasmic_33Preventingfallsandfallingfromthebed__ArgsType;
export const Plasmic_33Preventingfallsandfallingfromthebed__ArgProps =
  new Array<ArgPropType>();

export type Plasmic_33Preventingfallsandfallingfromthebed__OverridesType = {
  root?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  htmlVideo?: Flex__<typeof Video>;
};

export interface Default_33PreventingfallsandfallingfromthebedProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_33Preventingfallsandfallingfromthebed__RenderFunc(props: {
  variants: Plasmic_33Preventingfallsandfallingfromthebed__VariantsArgs;
  args: Plasmic_33Preventingfallsandfallingfromthebed__ArgsType;
  overrides: Plasmic_33Preventingfallsandfallingfromthebed__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root
        )}
      >
        <div className={classNames(projectcss.all, sty.freeBox__ibItN)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__keqzJ
            )}
          >
            {"\u6587\u7ae0"}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__oo7Q8)}>
            <PlasmicImg__
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"25%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              onClick={async event => {
                const $steps = {};

                $steps["goTo00LoginPage"] = true
                  ? (() => {
                      const actionArgs = { destination: `/` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goTo00LoginPage"] != null &&
                  typeof $steps["goTo00LoginPage"] === "object" &&
                  typeof $steps["goTo00LoginPage"].then === "function"
                ) {
                  $steps["goTo00LoginPage"] = await $steps["goTo00LoginPage"];
                }
              }}
              src={{
                src: "/plasmic/gu_lou_patient/images/资源162Xpng.png",
                fullWidth: 198,
                fullHeight: 198,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__j5XxA
              )}
            >
              {"\u9000\u51fa"}
            </div>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__nxdHm)}>
          <Video
            data-plasmic-name={"htmlVideo"}
            data-plasmic-override={overrides.htmlVideo}
            className={classNames("__wab_instance", sty.htmlVideo)}
            controls={true}
            src={
              "https://xiehe-1257043728.cos.ap-nanjing.myqcloud.com/dev/mp4/4%E6%9C%889%E6%97%A5%20%281%29.mp4"
            }
          />
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__qCc3S)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lBa9
            )}
          >
            {"\u5982\u4f55\u9884\u9632\u8dcc\u5012\u5760\u5e8a\uff1a"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cFemb
            )}
          >
            {
              "         \u8dcc\u5012\u548c\u5760\u5e8a\u4e8b\u4ef6\u5bf9\u60a3\u8005\u6765\u8bf4\u6709\u8bb8\u591a\u4e25\u91cd\u7684\u5371\u5bb3\uff0c\u5305\u62ec\u53ef\u80fd\u5bfc\u81f4\u7684\u8f6f\u7ec4\u7ec7\u635f\u4f24\u3001\u9aa8\u6298\uff0c\u4e25\u91cd\u65f6\u751a\u81f3\u6b7b\u4ea1\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u4e0d\u4ec5\u4f1a\u5ef6\u957f\u60a3\u8005\u7684\u4f4f\u9662\u65f6\u95f4\u3001\u589e\u52a0\u4f4f\u9662\u8d39\u7528\uff0c\u8fd8\u4f1a\u7ed9\u60a3\u8005\u7684\u8eab\u5fc3\u5065\u5eb7\u5e26\u6765\u8d1f\u9762\u5f71\u54cd\u3002"
            }
          </div>
        </div>
        <div
          className={classNames(projectcss.all, sty.freeBox__kRSor)}
          onClick={async event => {
            const $steps = {};

            $steps["goTo3NursingKnowledge"] = true
              ? (() => {
                  const actionArgs = { destination: `/Preparation` };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      __nextRouter?.push(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["goTo3NursingKnowledge"] != null &&
              typeof $steps["goTo3NursingKnowledge"] === "object" &&
              typeof $steps["goTo3NursingKnowledge"].then === "function"
            ) {
              $steps["goTo3NursingKnowledge"] = await $steps[
                "goTo3NursingKnowledge"
              ];
            }
          }}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eo7Ks
            )}
          >
            {"\u8fd4\u56de"}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "img", "htmlVideo"],
  img: ["img"],
  htmlVideo: ["htmlVideo"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  img: typeof PlasmicImg__;
  htmlVideo: typeof Video;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_33Preventingfallsandfallingfromthebed__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_33Preventingfallsandfallingfromthebed__VariantsArgs;
    args?: Plasmic_33Preventingfallsandfallingfromthebed__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit< // Specify variants directly as props
    Plasmic_33Preventingfallsandfallingfromthebed__VariantsArgs,
    ReservedPropsType
  > &
    /* Specify args directly as props*/ Omit<
      Plasmic_33Preventingfallsandfallingfromthebed__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames:
            Plasmic_33Preventingfallsandfallingfromthebed__ArgProps,
          internalVariantPropNames:
            Plasmic_33Preventingfallsandfallingfromthebed__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_33Preventingfallsandfallingfromthebed__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_33Preventingfallsandfallingfromthebed";
  } else {
    func.displayName = `Plasmic_33Preventingfallsandfallingfromthebed.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const PageGuard: React.FC<P> = props => (
    <PlasmicPageGuard__
      minRole={null}
      appId={"oGeya3WnsoRJC1KzKAMsFn"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </PlasmicPageGuard__>
  );

  return PageGuard;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "oGeya3WnsoRJC1KzKAMsFn"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const Plasmic_33Preventingfallsandfallingfromthebed = Object.assign(
  // Top-level Plasmic_33Preventingfallsandfallingfromthebed renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("root"))),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    htmlVideo: makeNodeComponent("htmlVideo"),

    // Metadata about props expected for Plasmic_33Preventingfallsandfallingfromthebed
    internalVariantProps:
      Plasmic_33Preventingfallsandfallingfromthebed__VariantProps,
    internalArgProps: Plasmic_33Preventingfallsandfallingfromthebed__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmic_33Preventingfallsandfallingfromthebed;
/* prettier-ignore-end */
