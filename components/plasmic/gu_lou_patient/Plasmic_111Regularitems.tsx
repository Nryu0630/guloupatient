// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oGeya3WnsoRJC1KzKAMsFn
// Component: GpnVH_JRpYlU

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: oGeya3WnsoRJC1KzKAMsFn/projectcss
import sty from "./Plasmic_111Regularitems.module.css"; // plasmic-import: GpnVH_JRpYlU/css

createPlasmicElementProxy;

export type Plasmic_111Regularitems__VariantMembers = {};
export type Plasmic_111Regularitems__VariantsArgs = {};
type VariantPropType = keyof Plasmic_111Regularitems__VariantsArgs;
export const Plasmic_111Regularitems__VariantProps =
  new Array<VariantPropType>();

export type Plasmic_111Regularitems__ArgsType = {};
type ArgPropType = keyof Plasmic_111Regularitems__ArgsType;
export const Plasmic_111Regularitems__ArgProps = new Array<ArgPropType>();

export type Plasmic_111Regularitems__OverridesType = {
  root?: Flex__<"div">;
};

export interface Default_111RegularitemsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_111Regularitems__RenderFunc(props: {
  variants: Plasmic_111Regularitems__VariantsArgs;
  args: Plasmic_111Regularitems__ArgsType;
  overrides: Plasmic_111Regularitems__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root
        )}
      >
        <div className={classNames(projectcss.all, sty.freeBox__ssDGl)}>
          <div className={classNames(projectcss.all, sty.freeBox__fEt2)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ahOuW
              )}
            >
              {"\u6587\u7ae0"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__hxJMe)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__b29Zi)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"25%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              onClick={async event => {
                const $steps = {};

                $steps["goToPage"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: (() => {
                          try {
                            return $ctx.config.routePrefix + "/";
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToPage"] != null &&
                  typeof $steps["goToPage"] === "object" &&
                  typeof $steps["goToPage"].then === "function"
                ) {
                  $steps["goToPage"] = await $steps["goToPage"];
                }
              }}
              src={{
                src: "/plasmic/gu_lou_patient/images/资源162Xpng.png",
                fullWidth: 198,
                fullHeight: 198,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oHkjg
              )}
            >
              {"\u9000\u51fa"}
            </div>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__eVPl)}>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__w3XRz)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"100%"}
            loading={"lazy"}
            src={{
              src: "/plasmic/gu_lou_patient/images/_13879转换01Png.png",
              fullWidth: 1801,
              fullHeight: 521,
              aspectRatio: undefined
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lZzf0
            )}
          >
            {"\u4e34\u5e8a\u65e5\u5e38\u5907\u7269\uff1a"}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___024T)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___1NuTs
              )}
            >
              {
                "\u4e00\u3001\u4f4f\u9662\u5fc5\u5907\u7528\u54c1\n1. \u8eab\u4efd\u8bc1\u3001\u533b\u4fdd\u5361\u3001\u5c31\u8bca\u5361\u7b49\u6709\u6548\u8bc1\u4ef6\u3002\n2. \u94f6\u884c\u5361\u548c\u5c11\u8bb8\u73b0\u91d1\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002\n3. \u75c5\u5386\u8d44\u6599\u3001\u75c5\u7406\u62a5\u544a\u3001\u5f71\u50cf\u62a5\u544a\u7b49\u3002\n4. \u65e5\u5e38\u4e00\u76f4\u5728\u4f7f\u7528\u7684\u836f\u7269\uff0c\u5982\u5fc3\u8840\u7ba1\u75c5\u836f\u7269\u3001\u964d\u7cd6\u836f\u3001\u6fc0\u7d20\u7b49\u3002\n5. \u7b14\u548c\u8bb0\u4e8b\u672c\uff0c\u65b9\u4fbf\u8bb0\u5f55\u533b\u5631\u548c\u6ce8\u610f\u4e8b\u9879\u30021\u3001\u6d17\u6f31\u7528\u54c1\uff1a\n\u7259\u5237\u3001\u7259\u818f\u3001\u6d17\u9762\u5976\u3001\u6d17\u53d1\u6c34\u3001\u6c90\u6d74\u9732\u3001\u80a5\u7682\u7b49\u3002\n\n\u4e8c\u3001\u751f\u6d3b\u7528\u54c1\uff1a\n\u6c34\u676f\u3001\u4fdd\u6e29\u676f\u3001\u7897\u7b77\u3001\u52fa\u5b50\u3001\u7eb8\u5dfe\u3001\u6d88\u6bd2\u6e7f\u5dfe\u7b49\n3\u3001\u7535\u5b50\u5a31\u4e50\u4ea7\u54c1\uff1a\n\u624b\u673a\u3001\u5145\u7535\u5668\u3001\u8033\u673a\u7b49\n\n4\u3001\u62a4\u7406\u7528\u54c1\uff1a\n\u5c3f\u76c6\u3001\u5c3f\u58f6\u3001\u62a4\u7406\u57ab\u3001\u5c3f\u4e0d\u6e7f\u7b49\n\n5\u3001\u5176\u4ed6\u7528\u54c1\uff1a\n\u8212\u9002\u7684\u8863\u7269\u548c\u88ab\u5b50\uff0c\u6839\u636e\u5b63\u8282\u548c\u5929\u6c14\u60c5\u51b5\u51c6\u5907\u9002\u5f53\u7684\u8863\u7269\u548c\u88ab\u5b50\n\u978b\u5b50\uff1a\u9632\u6ed1\u62d6\u978b\u6216\u8f6f\u5e95\u978b\n\u7ffb\u8eab\u6795\u3001U\u578b\u6795\uff08\u6839\u636e\u9700\u8981\u51c6\u5907\uff09\n"
              }
            </div>
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__m0Lw0)}
            onClick={async event => {
              const $steps = {};

              $steps["goToPage"] = true
                ? (() => {
                    const actionArgs = {
                      destination: (() => {
                        try {
                          return $ctx.config.routePrefix + "/Preparation";
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        __nextRouter?.push(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["goToPage"] != null &&
                typeof $steps["goToPage"] === "object" &&
                typeof $steps["goToPage"].then === "function"
              ) {
                $steps["goToPage"] = await $steps["goToPage"];
              }
            }}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bIeYt
              )}
            >
              {"\u8fd4\u56de"}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_111Regularitems__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_111Regularitems__VariantsArgs;
    args?: Plasmic_111Regularitems__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_111Regularitems__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_111Regularitems__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmic_111Regularitems__ArgProps,
          internalVariantPropNames: Plasmic_111Regularitems__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_111Regularitems__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_111Regularitems";
  } else {
    func.displayName = `Plasmic_111Regularitems.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const PageGuard: React.FC<P> = props => (
    <PlasmicPageGuard__
      minRole={null}
      appId={"oGeya3WnsoRJC1KzKAMsFn"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </PlasmicPageGuard__>
  );

  return PageGuard;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "oGeya3WnsoRJC1KzKAMsFn"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const Plasmic_111Regularitems = Object.assign(
  // Top-level Plasmic_111Regularitems renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("root"))),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for Plasmic_111Regularitems
    internalVariantProps: Plasmic_111Regularitems__VariantProps,
    internalArgProps: Plasmic_111Regularitems__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmic_111Regularitems;
/* prettier-ignore-end */
