// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oGeya3WnsoRJC1KzKAMsFn
// Component: igEBFcEH8tLa

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: oGeya3WnsoRJC1KzKAMsFn/projectcss
import sty from "./Plasmic_31Usingmedication.module.css"; // plasmic-import: igEBFcEH8tLa/css

createPlasmicElementProxy;

export type Plasmic_31Usingmedication__VariantMembers = {};
export type Plasmic_31Usingmedication__VariantsArgs = {};
type VariantPropType = keyof Plasmic_31Usingmedication__VariantsArgs;
export const Plasmic_31Usingmedication__VariantProps =
  new Array<VariantPropType>();

export type Plasmic_31Usingmedication__ArgsType = {};
type ArgPropType = keyof Plasmic_31Usingmedication__ArgsType;
export const Plasmic_31Usingmedication__ArgProps = new Array<ArgPropType>();

export type Plasmic_31Usingmedication__OverridesType = {
  root?: Flex__<"div">;
};

export interface Default_31UsingmedicationProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_31Usingmedication__RenderFunc(props: {
  variants: Plasmic_31Usingmedication__VariantsArgs;
  args: Plasmic_31Usingmedication__ArgsType;
  overrides: Plasmic_31Usingmedication__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root
        )}
      >
        <div className={classNames(projectcss.all, sty.freeBox__biOFh)}>
          <div className={classNames(projectcss.all, sty.freeBox__zd65E)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x1D8Q
              )}
            >
              {"\u6587\u7ae0"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__c2CkP)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__zm0Fz)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"25%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              onClick={async event => {
                const $steps = {};

                $steps["goToPage"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: (() => {
                          try {
                            return $ctx.config.routePrefix + "/";
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToPage"] != null &&
                  typeof $steps["goToPage"] === "object" &&
                  typeof $steps["goToPage"].then === "function"
                ) {
                  $steps["goToPage"] = await $steps["goToPage"];
                }
              }}
              src={{
                src: "/plasmic/gu_lou_patient/images/资源162Xpng.png",
                fullWidth: 198,
                fullHeight: 198,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__e2KyB
              )}
            >
              {"\u9000\u51fa"}
            </div>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__xyZe0)}>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__vzjlX)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"100%"}
            loading={"lazy"}
            src={{
              src: "/plasmic/gu_lou_patient/images/用药01Png.png",
              fullWidth: 1201,
              fullHeight: 351,
              aspectRatio: undefined
            }}
          />
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__fmbGn)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__bwXO
            )}
          >
            {"\u4f7f\u7528\u836f\u7269\uff1a"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___78P24
            )}
          >
            {
              "        \u670d\u7528\u836f\u7269\u65f6\uff0c\u5e94\u9075\u5faa\u533b\u5631\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u963f\u53f8\u5339\u6797\u3001\u5e03\u6d1b\u82ac\u3001\u5bf9\u4e59\u9170\u6c28\u57fa\u915a\u53ef\u53e3\u670d\uff1b\u6c2f\u96f7\u4ed6\u5b9a\u3001\u82ef\u6d77\u62c9\u660e\u901a\u5e38\u4e3a\u53e3\u670d\u6216\u9075\u533b\u5631\u4f7f\u7528\u3002\u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u836f\u7269\uff0c\u5efa\u8bae\u54a8\u8be2\u533b\u751f\u4ee5\u83b7\u53d6\u8be6\u7ec6\u6307\u5bfc\u3002\n1.\u963f\u53f8\u5339\u6797\n\u963f\u53f8\u5339\u6797\u53ef\u7528\u4e8e\u7f13\u89e3\u8f7b\u5ea6\u81f3\u4e2d\u5ea6\u7684\u75bc\u75db\u548c\u53d1\u70ed\u3002\u5176\u80fd\u6291\u5236\u524d\u5217\u817a\u7d20\u5408\u6210\uff0c\u964d\u4f4e\u673a\u4f53\u5bf9\u4e8e\u81f4\u75db\u56e0\u5b50\u7684\u611f\u53d7\u3002\u957f\u671f\u670d\u7528\u963f\u53f8\u5339\u6797\u8005\u5e94\u5b9a\u671f\u8fdb\u884c\u8840\u6db2\u68c0\u67e5\uff0c\u6ce8\u610f\u89c2\u5bdf\u662f\u5426\u6709\u51fa\u8840\u503e\u5411\u3002\n2.\u5e03\u6d1b\u82ac\n\u5e03\u6d1b\u82ac\u9002\u7528\u4e8e\u6cbb\u7597\u8f7b\u81f3\u4e2d\u5ea6\u7684\u75bc\u75db\u3001\u53d1\u70e7\u7b49\u60c5\u51b5\u3002\u8be5\u836f\u7269\u5177\u6709\u89e3\u70ed\u9547\u75db\u7684\u4f5c\u7528\u3002\u670d\u836f\u671f\u95f4\u4e0d\u5b9c\u996e\u9152\uff0c\u4ee5\u514d\u5f15\u8d77\u80c3\u80a0\u9053\u4e0d\u9002\u3002\n3.\u5bf9\u4e59\u9170\u6c28\u57fa\u915a\n\u5bf9\u4e59\u9170\u6c28\u57fa\u915a\u9002\u7528\u4e8e\u666e\u901a\u611f\u5192\u6216\u6d41\u884c\u6027\u611f\u5192\u5f15\u8d77\u7684\u53d1\u70ed\uff0c\u4e5f\u7528\u4e8e\u7f13\u89e3\u8f7b\u81f3\u4e2d\u5ea6\u75bc\u75db\u5982\u5934\u75db\u3001\u5173\u8282\u75db\u3001\u504f\u5934\u75db\u3001\u7259\u75db\u7b49\u3002\u672c\u54c1\u53ef\u901a\u8fc7\u6291\u5236\u4e2d\u67a2\u795e\u7ecf\u7cfb\u7edf\u524d\u5217\u817a\u7d20\u7684\u5408\u6210\u800c\u4ea7\u751f\u89e3\u70ed\u3001\u9547\u75db\u53ca\u6297\u708e\u4f5c\u7528\u3002\u809d\u80be\u529f\u80fd\u4e0d\u5168\u60a3\u8005\u5e94\u614e\u7528\u3002\n4.\u6c2f\u96f7\u4ed6\u5b9a\n\u6c2f\u96f7\u4ed6\u5b9a\u662f\u4e00\u79cd\u6297\u7ec4\u80fa\u836f\uff0c\u53ef\u7f13\u89e3\u8fc7\u654f\u53cd\u5e94\u5bfc\u81f4\u7684\u7619\u75d2\u7b49\u75c7\u72b6\u3002\u672c\u54c1\u901a\u8fc7\u9009\u62e9\u6027\u62ee\u6297\u5916\u5468H1\u53d7\u4f53\uff0c\u51cf\u8f7b\u8fc7\u654f\u53cd\u5e94\u7684\u75c7\u72b6\u30026\u5c81\u4ee5\u4e0b\u513f\u7ae5\u4f7f\u7528\u9700\u8c28\u614e\u3002\n5.\u82ef\u6d77\u62c9\u660e\n\u82ef\u6d77\u62c9\u660e\u4e3a\u6297\u7ec4\u7ec7\u80fa\u7c7b\u836f\u7269\uff0c\u4e3b\u8981\u7528\u4e8e\u76ae\u80a4\u9ecf\u819c\u7684\u53d8\u6001\u53cd\u5e94\uff0c\u6bd4\u5982\u8368\u9ebb\u75b9\u3001\u63a5\u89e6\u6027\u76ae\u708e\u7b49\u3002\u672c\u54c1\u80fd\u5bf9\u6297\u7ec4\u80fa\u6240\u5f15\u8d77\u7684\u5fae\u8840\u7ba1\u6269\u5f20\u3001\u6bdb\u7ec6\u8840\u7ba1\u901a\u900f\u6027\u589e\u52a0\u3001\u5e73\u6ed1\u808c\u6536\u7f29\u4ee5\u53ca\u817a\u4f53\u5206\u6ccc\u589e\u591a\u7b49\u4f5c\u7528\u3002\u9a7e\u9a76\u673a\u52a8\u8f66\u8f86\u53ca\u64cd\u4f5c\u673a\u5668\u8005\u5b9c\u907f\u514d\u5927\u91cf\u670d\u7528\u3002\n\u4ee5\u4e0a\u63d0\u53ca\u7684\u6240\u6709\u836f\u7269\u5747\u9700\u8981\u9075\u7167\u533b\u5631\u6b63\u786e\u4f7f\u7528\u3002\u540c\u65f6\uff0c\u5728\u670d\u7528\u4efb\u4f55\u975e\u5904\u65b9\u836f\u7269\u524d\uff0c\u5efa\u8bae\u4ed4\u7ec6\u9605\u8bfb\u836f\u54c1\u8bf4\u660e\u4e66\u5e76\u4e86\u89e3\u53ef\u80fd\u4ea7\u751f\u7684\u4e0d\u826f\u53cd\u5e94\uff0c\u4ee5\u786e\u4fdd\u5b89\u5168\u6709\u6548\u5730\u4f7f\u7528\u836f\u7269\u3002"
            }
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__n9ArY)}
            onClick={async event => {
              const $steps = {};

              $steps["goToPage"] = true
                ? (() => {
                    const actionArgs = {
                      destination: (() => {
                        try {
                          return $ctx.config.routePrefix + "/Medication";
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        __nextRouter?.push(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["goToPage"] != null &&
                typeof $steps["goToPage"] === "object" &&
                typeof $steps["goToPage"].then === "function"
              ) {
                $steps["goToPage"] = await $steps["goToPage"];
              }
            }}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oiOaV
              )}
            >
              {"\u8fd4\u56de"}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_31Usingmedication__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_31Usingmedication__VariantsArgs;
    args?: Plasmic_31Usingmedication__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_31Usingmedication__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_31Usingmedication__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmic_31Usingmedication__ArgProps,
          internalVariantPropNames: Plasmic_31Usingmedication__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_31Usingmedication__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_31Usingmedication";
  } else {
    func.displayName = `Plasmic_31Usingmedication.${nodeName}`;
  }
  return func;
}

export const Plasmic_31Usingmedication = Object.assign(
  // Top-level Plasmic_31Usingmedication renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for Plasmic_31Usingmedication
    internalVariantProps: Plasmic_31Usingmedication__VariantProps,
    internalArgProps: Plasmic_31Usingmedication__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmic_31Usingmedication;
/* prettier-ignore-end */
